@model MockUp.Models.Listing

@{
    ViewBag.Title = "Create";
}

<div class="container">

    <h4 class="text-center my-4">Create Listing</h4>

    <hr />

    @using (Html.BeginForm("Create", "ListingManage", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Municipality, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Municipality, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Municipality, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Province, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.SquareFeet, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SquareFeet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SquareFeet, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Beds, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Beds, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Beds, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Baths, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Baths, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Baths, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.CityArea, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CityArea, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CityArea, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.HeatingType, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.HeatingType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HeatingType, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.HasFireplace, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasFireplace)
                        @Html.ValidationMessageFor(model => model.HasFireplace, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.HasGarage, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasGarage)
                        @Html.ValidationMessageFor(model => model.HasGarage, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.AgentId, "Agent", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("AgentSelect", ViewBag.AgentSelect as SelectList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AgentId, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.ContractSigned, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.ContractSigned)
                        @Html.ValidationMessageFor(model => model.ContractSigned, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row justify-content-center">
                <div class="col-md-4 form-group">
                    @Html.Label("Listing Images", new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.TextBox("files", null, new { @type = "file", @multiple = "multiple" })
                    </div>
                </div>
            </div>

            <div class="form-group text-center my-4">
                <input type="submit" value="Create" class="btn btn-lila" />
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>